---
openapi: 3.0.2
info:
  title: API de Gerenciamento de Post
  version: 0.0.1
paths:
  "/":
    get:
      summary: Root
      operationId: root__get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/api/v1/auth/sign-in":
    post:
      tags:
        - v1
        - auth
      summary: Sign In
      operationId: sign_in_api_v1_auth_sign_in_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignIn"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SignInResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/auth/sign-up":
    post:
      tags:
        - v1
        - auth
      summary: Sign Up
      operationId: sign_up_api_v1_auth_sign_up_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUp"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v1/auth/me":
    get:
      tags:
        - v1
        - auth
      summary: Get Me
      operationId: get_me_api_v1_auth_me_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
      security:
        - JWTBearer: []
  "/api/v1/post":
    get:
      tags:
        - v1
        - v1
        - post
      summary: Get Post List
      operationId: get_post_list_api_v1_post_get
      parameters:
        - required: false
          schema:
            title: User Token
            type: string
          name: user_token
          in: query
        - required: false
          schema:
            title: Title
            type: string
          name: title
          in: query
        - required: false
          schema:
            title: Content
            type: string
          name: content
          in: query
        - required: false
          schema:
            title: Is Published
            type: boolean
          name: is_published
          in: query
        - required: false
          schema:
            title: Ordering
            type: string
          name: ordering
          in: query
        - required: false
          schema:
            title: Page
            type: integer
          name: page
          in: query
        - required: false
          schema:
            title: Page Size
            anyOf:
              - type: integer
              - type: string
          name: page_size
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FindPostWithTagsResult"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    post:
      tags:
        - v1
        - v1
        - post
      summary: Create Post
      operationId: create_post_api_v1_post_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpsertPostWithTags"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostWithTags"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
  "/api/v1/post/{post_id}":
    get:
      tags:
        - v1
        - v1
        - post
      summary: Get Post
      operationId: get_post_api_v1_post__post_id__get
      parameters:
        - required: true
          schema:
            title: Post Id
            type: integer
          name: post_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostWithTags"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
        - v1
        - v1
        - post
      summary: Delete Post
      operationId: delete_post_api_v1_post__post_id__delete
      parameters:
        - required: true
          schema:
            title: Post Id
            type: integer
          name: post_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Blank"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
    patch:
      tags:
        - v1
        - v1
        - post
      summary: Update Post
      operationId: update_post_api_v1_post__post_id__patch
      parameters:
        - required: true
          schema:
            title: Post Id
            type: integer
          name: post_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpsertPostWithTags"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PostWithTags"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
  "/api/v1/tag":
    get:
      tags:
        - v1
        - v1
        - v1
        - tag
      summary: Get Tag List
      operationId: get_tag_list_api_v1_tag_get
      parameters:
        - required: false
          schema:
            title: User Token
            type: string
          name: user_token
          in: query
        - required: false
          schema:
            title: Name
            type: string
          name: name
          in: query
        - required: false
          schema:
            title: Description
            type: string
          name: description
          in: query
        - required: false
          schema:
            title: Ordering
            type: string
          name: ordering
          in: query
        - required: false
          schema:
            title: Page
            type: integer
          name: page
          in: query
        - required: false
          schema:
            title: Page Size
            anyOf:
              - type: integer
              - type: string
          name: page_size
          in: query
        - required: false
          schema:
            title: Id  In
            type: string
          name: id__in
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FindTagResult"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    post:
      tags:
        - v1
        - v1
        - v1
        - tag
      summary: Create Tag
      operationId: create_tag_api_v1_tag_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpsertTag"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Tag"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
  "/api/v1/tag/{tag_id}":
    get:
      tags:
        - v1
        - v1
        - v1
        - tag
      summary: Get Tag
      operationId: get_tag_api_v1_tag__tag_id__get
      parameters:
        - required: true
          schema:
            title: Tag Id
            type: integer
          name: tag_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Tag"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    delete:
      tags:
        - v1
        - v1
        - v1
        - tag
      summary: Delete Tag
      operationId: delete_tag_api_v1_tag__tag_id__delete
      parameters:
        - required: true
          schema:
            title: Tag Id
            type: integer
          name: tag_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Blank"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
    patch:
      tags:
        - v1
        - v1
        - v1
        - tag
      summary: Update Tag
      operationId: update_tag_api_v1_tag__tag_id__patch
      parameters:
        - required: true
          schema:
            title: Tag Id
            type: integer
          name: tag_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpsertTag"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Tag"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
  "/api/v1/user":
    get:
      tags:
        - v1
        - v1
        - v1
        - v1
        - user
      summary: Get User List
      operationId: get_user_list_api_v1_user_get
      parameters:
        - required: false
          schema:
            title: Email
            type: string
          name: email
          in: query
        - required: false
          schema:
            title: User Token
            type: string
          name: user_token
          in: query
        - required: false
          schema:
            title: Name
            type: string
          name: name
          in: query
        - required: false
          schema:
            title: Is Active
            type: boolean
          name: is_active
          in: query
        - required: false
          schema:
            title: Is Superuser
            type: boolean
          name: is_superuser
          in: query
        - required: false
          schema:
            title: Ordering
            type: string
          name: ordering
          in: query
        - required: false
          schema:
            title: Page
            type: integer
          name: page
          in: query
        - required: false
          schema:
            title: Page Size
            anyOf:
              - type: integer
              - type: string
          name: page_size
          in: query
        - required: false
          schema:
            title: Email  Eq
            type: string
          name: email__eq
          in: query
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FindUserResult"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
        - JWTBearer: []
    post:
      tags:
        - v1
        - v1
        - v1
        - v1
        - user
      summary: Create User
      operationId: create_user_api_v1_user_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpsertUser"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
        - JWTBearer: []
  "/api/v1/user/{user_id}":
    get:
      tags:
        - v1
        - v1
        - v1
        - v1
        - user
      summary: Get User
      operationId: get_user_api_v1_user__user_id__get
      parameters:
        - required: true
          schema:
            title: User Id
            type: integer
          name: user_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
        - JWTBearer: []
    delete:
      tags:
        - v1
        - v1
        - v1
        - v1
        - user
      summary: Delete User
      operationId: delete_user_api_v1_user__user_id__delete
      parameters:
        - required: true
          schema:
            title: User Id
            type: integer
          name: user_id
          in: path
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Blank"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
        - JWTBearer: []
    patch:
      tags:
        - v1
        - v1
        - v1
        - v1
        - user
      summary: Update User
      operationId: update_user_api_v1_user__user_id__patch
      parameters:
        - required: true
          schema:
            title: User Id
            type: integer
          name: user_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UpsertUser"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
      security:
        - JWTBearer: []
        - JWTBearer: []
  "/api/v2/auth/sign-in":
    post:
      tags:
        - v2
        - auth
      summary: Sign In
      operationId: sign_in_api_v2_auth_sign_in_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignIn"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SignInResponse"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v2/auth/sign-up":
    post:
      tags:
        - v2
        - auth
      summary: Sign Up
      operationId: sign_up_api_v2_auth_sign_up_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUp"
        required: true
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/api/v2/auth/me":
    get:
      tags:
        - v2
        - auth
      summary: Get Me
      operationId: get_me_api_v2_auth_me_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
      security:
        - JWTBearer: []
components:
  schemas:
    Blank:
      title: Blank
      type: object
      properties: {}
    FindPostWithTagsResult:
      title: FindPostWithTagsResult
      type: object
      properties:
        founds:
          title: Founds
          type: array
          items:
            "$ref": "#/components/schemas/PostWithTags"
        search_options:
          "$ref": "#/components/schemas/SearchOptions"
    FindTagResult:
      title: FindTagResult
      type: object
      properties:
        founds:
          title: Founds
          type: array
          items:
            "$ref": "#/components/schemas/Tag"
        search_options:
          "$ref": "#/components/schemas/SearchOptions"
    FindUserResult:
      title: FindUserResult
      type: object
      properties:
        founds:
          title: Founds
          type: array
          items:
            "$ref": "#/components/schemas/User"
        search_options:
          "$ref": "#/components/schemas/SearchOptions"
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            "$ref": "#/components/schemas/ValidationError"
    PostWithTags:
      title: PostWithTags
      type: object
      properties:
        user_token:
          title: User Token
          type: string
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        is_published:
          title: Is Published
          type: boolean
        id:
          title: Id
          type: integer
        created_at:
          title: Created At
          type: string
          format: date-time
        updated_at:
          title: Updated At
          type: string
          format: date-time
        tags:
          title: Tags
          type: array
          items:
            "$ref": "#/components/schemas/Tag"
    SearchOptions:
      title: SearchOptions
      type: object
      properties:
        ordering:
          title: Ordering
          type: string
        page:
          title: Page
          type: integer
        page_size:
          title: Page Size
          anyOf:
            - type: integer
            - type: string
        total_count:
          title: Total Count
          type: integer
    SignIn:
      title: SignIn
      required:
        - email__eq
        - password
      type: object
      properties:
        email__eq:
          title: Email  Eq
          type: string
        password:
          title: Password
          type: string
    SignInResponse:
      title: SignInResponse
      required:
        - access_token
        - expiration
        - user_info
      type: object
      properties:
        access_token:
          title: Access Token
          type: string
        expiration:
          title: Expiration
          type: string
          format: date-time
        user_info:
          "$ref": "#/components/schemas/User"
    SignUp:
      title: SignUp
      required:
        - email
        - password
        - name
      type: object
      properties:
        email:
          title: Email
          type: string
        password:
          title: Password
          type: string
        name:
          title: Name
          type: string
    Tag:
      title: Tag
      type: object
      properties:
        user_token:
          title: User Token
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        id:
          title: Id
          type: integer
        created_at:
          title: Created At
          type: string
          format: date-time
        updated_at:
          title: Updated At
          type: string
          format: date-time
    UpsertPostWithTags:
      title: UpsertPostWithTags
      type: object
      properties:
        user_token:
          title: User Token
          type: string
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        is_published:
          title: Is Published
          type: boolean
        tag_ids:
          title: Tag Ids
          type: array
          items:
            type: integer
    UpsertTag:
      title: UpsertTag
      type: object
      properties:
        user_token:
          title: User Token
          type: string
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
    UpsertUser:
      title: UpsertUser
      type: object
      properties:
        email:
          title: Email
          type: string
        user_token:
          title: User Token
          type: string
        name:
          title: Name
          type: string
        is_active:
          title: Is Active
          type: boolean
        is_superuser:
          title: Is Superuser
          type: boolean
    User:
      title: User
      type: object
      properties:
        email:
          title: Email
          type: string
        user_token:
          title: User Token
          type: string
        name:
          title: Name
          type: string
        is_active:
          title: Is Active
          type: boolean
        is_superuser:
          title: Is Superuser
          type: boolean
        id:
          title: Id
          type: integer
        created_at:
          title: Created At
          type: string
          format: date-time
        updated_at:
          title: Updated At
          type: string
          format: date-time
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
  securitySchemes:
    JWTBearer:
      type: http
      scheme: bearer
